"use strict";(globalThis.webpackChunknettracex=globalThis.webpackChunknettracex||[]).push([[5237],{1626:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"guides/contributing","title":"Contributing to NetTraceX","description":"Thank you for your interest in contributing to NetTraceX! This guide will help you get started with contributing to the project.","source":"@site/docs/guides/contributing.md","sourceDirName":"guides","slug":"/guides/contributing","permalink":"/docs/guides/contributing","draft":false,"unlisted":false,"editUrl":"https://github.com/nettracex/nettracex-tui-website/tree/main/docs/guides/contributing.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Quick Start Guide","permalink":"/docs/guides/quick-start"},"next":{"title":"Development Setup","permalink":"/docs/development/setup"}}');var t=s(4848),l=s(8453);const r={sidebar_position:4},o="Contributing to NetTraceX",c={},d=[{value:"Getting Started",id:"getting-started",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Development Setup",id:"development-setup",level:3},{value:"Development Workflow",id:"development-workflow",level:2},{value:"1. Create a Feature Branch",id:"1-create-a-feature-branch",level:3},{value:"2. Make Your Changes",id:"2-make-your-changes",level:3},{value:"3. Test Your Changes",id:"3-test-your-changes",level:3},{value:"4. Commit Your Changes",id:"4-commit-your-changes",level:3},{value:"5. Push and Create a Pull Request",id:"5-push-and-create-a-pull-request",level:3},{value:"Code Style and Standards",id:"code-style-and-standards",level:2},{value:"Go Code Style",id:"go-code-style",level:3},{value:"Commit Message Convention",id:"commit-message-convention",level:3},{value:"Code Organization",id:"code-organization",level:3},{value:"Testing Guidelines",id:"testing-guidelines",level:2},{value:"Unit Tests",id:"unit-tests",level:3},{value:"Integration Tests",id:"integration-tests",level:3},{value:"Performance Tests",id:"performance-tests",level:3},{value:"Documentation",id:"documentation",level:2},{value:"Code Documentation",id:"code-documentation",level:3},{value:"User Documentation",id:"user-documentation",level:3},{value:"Pull Request Process",id:"pull-request-process",level:2},{value:"Before Submitting",id:"before-submitting",level:3},{value:"Pull Request Template",id:"pull-request-template",level:3},{value:"Review Process",id:"review-process",level:3},{value:"Issue Reporting",id:"issue-reporting",level:2},{value:"Bug Reports",id:"bug-reports",level:3},{value:"Feature Requests",id:"feature-requests",level:3},{value:"Community Guidelines",id:"community-guidelines",level:2},{value:"Code of Conduct",id:"code-of-conduct",level:3},{value:"Getting Help",id:"getting-help",level:3},{value:"Release Process",id:"release-process",level:2},{value:"Versioning",id:"versioning",level:3},{value:"Release Checklist",id:"release-checklist",level:3},{value:"Recognition",id:"recognition",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"contributing-to-nettracex",children:"Contributing to NetTraceX"})}),"\n",(0,t.jsx)(n.p,{children:"Thank you for your interest in contributing to NetTraceX! This guide will help you get started with contributing to the project."}),"\n",(0,t.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,t.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Go 1.21 or later"}),"\n",(0,t.jsx)(n.li,{children:"Git"}),"\n",(0,t.jsx)(n.li,{children:"Make (for Unix/Linux/macOS) or PowerShell (for Windows)"}),"\n",(0,t.jsx)(n.li,{children:"A terminal emulator"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"development-setup",children:"Development Setup"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Fork the repository"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Fork the repository on GitHub, then clone your fork\ngit clone https://github.com/your-username/nettracex-tui.git\ncd nettracex\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Set up the development environment"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Add upstream remote\ngit remote add upstream https://github.com/nettracex/nettracex-tui-tui.git\n\n# Install dependencies\ngo mod download\ngo mod tidy\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Build the project"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Unix/Linux/macOS\nmake build\n\n# Windows\ngo build -o bin/nettracex.exe ./cmd/nettracex\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Run tests"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Run all tests\ngo test ./...\n\n# Run tests with coverage\ngo test -coverprofile=coverage.out ./...\ngo tool cover -html=coverage.out\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"development-workflow",children:"Development Workflow"}),"\n",(0,t.jsx)(n.h3,{id:"1-create-a-feature-branch",children:"1. Create a Feature Branch"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Create and switch to a new branch\ngit checkout -b feature/your-feature-name\n\n# Or for bug fixes\ngit checkout -b fix/your-bug-description\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-make-your-changes",children:"2. Make Your Changes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Follow the existing code style and patterns"}),"\n",(0,t.jsx)(n.li,{children:"Write tests for new functionality"}),"\n",(0,t.jsx)(n.li,{children:"Update documentation as needed"}),"\n",(0,t.jsx)(n.li,{children:"Ensure all tests pass"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"3-test-your-changes",children:"3. Test Your Changes"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Run the full test suite\ngo test ./...\n\n# Run specific tests\ngo test ./internal/domain -v\ngo test ./internal/tools/ping -v\n\n# Run with race detection\ngo test -race ./...\n\n# Run with coverage\ngo test -cover ./...\n"})}),"\n",(0,t.jsx)(n.h3,{id:"4-commit-your-changes",children:"4. Commit Your Changes"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Stage your changes\ngit add .\n\n# Commit with a descriptive message\ngit commit -m "feat: add new diagnostic tool for network latency"\n'})}),"\n",(0,t.jsx)(n.h3,{id:"5-push-and-create-a-pull-request",children:"5. Push and Create a Pull Request"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Push your branch\ngit push origin feature/your-feature-name\n"})}),"\n",(0,t.jsx)(n.p,{children:"Then create a pull request on GitHub."}),"\n",(0,t.jsx)(n.h2,{id:"code-style-and-standards",children:"Code Style and Standards"}),"\n",(0,t.jsx)(n.h3,{id:"go-code-style",children:"Go Code Style"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Follow the ",(0,t.jsx)(n.a,{href:"https://golang.org/doc/effective_go.html",children:"Effective Go"})," guidelines"]}),"\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.code,{children:"gofmt"})," to format your code"]}),"\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.code,{children:"golint"})," to check for style issues"]}),"\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.code,{children:"go vet"})," to check for potential issues"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Format code\ngo fmt ./...\n\n# Check for issues\ngo vet ./...\n\n# Lint code (if golangci-lint is installed)\ngolangci-lint run\n"})}),"\n",(0,t.jsx)(n.h3,{id:"commit-message-convention",children:"Commit Message Convention"}),"\n",(0,t.jsxs)(n.p,{children:["We follow the ",(0,t.jsx)(n.a,{href:"https://www.conventionalcommits.org/",children:"Conventional Commits"})," specification:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"feat:"})," - New features"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"fix:"})," - Bug fixes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"docs:"})," - Documentation changes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"style:"})," - Code style changes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"refactor:"})," - Code refactoring"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"test:"})," - Test changes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"chore:"})," - Maintenance tasks"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Examples:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"feat: add SSL certificate validation tool\nfix: resolve timeout issue in ping tool\ndocs: update installation guide\ntest: add unit tests for DNS tool\n"})}),"\n",(0,t.jsx)(n.h3,{id:"code-organization",children:"Code Organization"}),"\n",(0,t.jsx)(n.p,{children:"Follow the clean architecture principles:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"internal/\n\u251c\u2500\u2500 domain/           # Core business logic\n\u2502   \u251c\u2500\u2500 interfaces.go\n\u2502   \u251c\u2500\u2500 types.go\n\u2502   \u2514\u2500\u2500 *_test.go\n\u251c\u2500\u2500 application/      # Use cases\n\u2502   \u251c\u2500\u2500 services/\n\u2502   \u2514\u2500\u2500 handlers/\n\u251c\u2500\u2500 infrastructure/   # External dependencies\n\u2502   \u251c\u2500\u2500 network/\n\u2502   \u2514\u2500\u2500 storage/\n\u2514\u2500\u2500 presentation/     # UI components\n    \u251c\u2500\u2500 tui/\n    \u2514\u2500\u2500 cli/\n"})}),"\n",(0,t.jsx)(n.h2,{id:"testing-guidelines",children:"Testing Guidelines"}),"\n",(0,t.jsx)(n.h3,{id:"unit-tests",children:"Unit Tests"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Write tests for all public functions"}),"\n",(0,t.jsx)(n.li,{children:"Aim for high test coverage (80%+)"}),"\n",(0,t.jsx)(n.li,{children:"Use table-driven tests for multiple scenarios"}),"\n",(0,t.jsx)(n.li,{children:"Mock external dependencies"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'func TestPingTool_Execute(t *testing.T) {\n    tests := []struct {\n        name    string\n        params  PingParameters\n        want    PingResult\n        wantErr bool\n    }{\n        {\n            name: "successful ping",\n            params: PingParameters{\n                Host:   "8.8.8.8",\n                Count:  4,\n            },\n            want: PingResult{\n                Host: "8.8.8.8",\n                // ... expected result\n            },\n            wantErr: false,\n        },\n        // ... more test cases\n    }\n    \n    for _, tt := range tests {\n        t.Run(tt.name, func(t *testing.T) {\n            tool := &PingTool{}\n            got, err := tool.Execute(context.Background(), tt.params)\n            \n            if (err != nil) != tt.wantErr {\n                t.Errorf("Execute() error = %v, wantErr %v", err, tt.wantErr)\n                return\n            }\n            \n            if !reflect.DeepEqual(got, tt.want) {\n                t.Errorf("Execute() = %v, want %v", got, tt.want)\n            }\n        })\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"integration-tests",children:"Integration Tests"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Test the complete workflow"}),"\n",(0,t.jsx)(n.li,{children:"Use real network calls (with timeouts)"}),"\n",(0,t.jsx)(n.li,{children:"Test error handling and edge cases"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"performance-tests",children:"Performance Tests"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Benchmark critical functions"}),"\n",(0,t.jsx)(n.li,{children:"Test with large datasets"}),"\n",(0,t.jsx)(n.li,{children:"Monitor memory usage"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'func BenchmarkPingTool_Execute(b *testing.B) {\n    tool := &PingTool{}\n    params := PingParameters{\n        Host:  "8.8.8.8",\n        Count: 4,\n    }\n    \n    b.ResetTimer()\n    for i := 0; i < b.N; i++ {\n        _, err := tool.Execute(context.Background(), params)\n        if err != nil {\n            b.Fatal(err)\n        }\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"documentation",children:"Documentation"}),"\n",(0,t.jsx)(n.h3,{id:"code-documentation",children:"Code Documentation"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Document all public functions and types"}),"\n",(0,t.jsx)(n.li,{children:"Use Go doc comments"}),"\n",(0,t.jsx)(n.li,{children:"Include examples for complex functions"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'// PingTool implements the DiagnosticTool interface for network ping operations.\n// It provides ICMP ping functionality with configurable parameters.\ntype PingTool struct {\n    client NetworkClient\n}\n\n// Execute performs a ping operation to the specified host.\n// It returns a PingResult containing packet information and statistics.\n//\n// Example:\n//   tool := &PingTool{client: networkClient}\n//   result, err := tool.Execute(ctx, PingParameters{\n//       Host: "google.com",\n//       Count: 4,\n//   })\nfunc (p *PingTool) Execute(ctx context.Context, params Parameters) (Result, error) {\n    // Implementation...\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"user-documentation",children:"User Documentation"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Update README.md for new features"}),"\n",(0,t.jsx)(n.li,{children:"Add examples and use cases"}),"\n",(0,t.jsx)(n.li,{children:"Update configuration documentation"}),"\n",(0,t.jsx)(n.li,{children:"Add troubleshooting guides"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"pull-request-process",children:"Pull Request Process"}),"\n",(0,t.jsx)(n.h3,{id:"before-submitting",children:"Before Submitting"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Ensure all tests pass"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"go test ./...\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Check code style"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"go fmt ./...\ngo vet ./...\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Update documentation"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Update README.md if needed"}),"\n",(0,t.jsx)(n.li,{children:"Add/update doc comments"}),"\n",(0,t.jsx)(n.li,{children:"Update configuration docs"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Test your changes"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Test on different platforms"}),"\n",(0,t.jsx)(n.li,{children:"Test with different configurations"}),"\n",(0,t.jsx)(n.li,{children:"Test edge cases"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"pull-request-template",children:"Pull Request Template"}),"\n",(0,t.jsx)(n.p,{children:"When creating a pull request, include:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Description"}),": What changes were made and why"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Type"}),": Feature, bug fix, documentation, etc."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Testing"}),": How the changes were tested"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Breaking Changes"}),": Any breaking changes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Screenshots"}),": For UI changes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Checklist"}),": Ensure all items are completed"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"review-process",children:"Review Process"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Automated Checks"}),": CI/CD pipeline runs tests and checks"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Code Review"}),": Maintainers review the code"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Testing"}),": Changes are tested in different environments"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Approval"}),": At least one maintainer must approve"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Merge"}),": Changes are merged to main branch"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"issue-reporting",children:"Issue Reporting"}),"\n",(0,t.jsx)(n.h3,{id:"bug-reports",children:"Bug Reports"}),"\n",(0,t.jsx)(n.p,{children:"When reporting bugs, include:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Description"}),": Clear description of the issue"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Steps to Reproduce"}),": Detailed steps"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Expected Behavior"}),": What should happen"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Actual Behavior"}),": What actually happens"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Environment"}),": OS, Go version, etc."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Logs"}),": Relevant error messages or logs"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"feature-requests",children:"Feature Requests"}),"\n",(0,t.jsx)(n.p,{children:"When requesting features, include:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Description"}),": Clear description of the feature"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Use Case"}),": Why this feature is needed"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Proposed Solution"}),": How you think it should work"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Alternatives"}),": Other solutions considered"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"community-guidelines",children:"Community Guidelines"}),"\n",(0,t.jsx)(n.h3,{id:"code-of-conduct",children:"Code of Conduct"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Be respectful and inclusive"}),"\n",(0,t.jsx)(n.li,{children:"Focus on constructive feedback"}),"\n",(0,t.jsx)(n.li,{children:"Help others learn"}),"\n",(0,t.jsx)(n.li,{children:"Follow the project's coding standards"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"getting-help",children:"Getting Help"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Check existing issues and discussions"}),"\n",(0,t.jsx)(n.li,{children:"Ask questions in GitHub Discussions"}),"\n",(0,t.jsx)(n.li,{children:"Join our Discord community"}),"\n",(0,t.jsx)(n.li,{children:"Read the documentation"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"release-process",children:"Release Process"}),"\n",(0,t.jsx)(n.h3,{id:"versioning",children:"Versioning"}),"\n",(0,t.jsxs)(n.p,{children:["We follow ",(0,t.jsx)(n.a,{href:"https://semver.org/",children:"Semantic Versioning"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"MAJOR"}),": Breaking changes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"MINOR"}),": New features (backward compatible)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"PATCH"}),": Bug fixes (backward compatible)"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"release-checklist",children:"Release Checklist"}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","All tests pass"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Documentation updated"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Changelog updated"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Version bumped"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Release notes prepared"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Tag created"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Release published"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"recognition",children:"Recognition"}),"\n",(0,t.jsx)(n.p,{children:"Contributors are recognized in:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"CONTRIBUTORS.md file"}),"\n",(0,t.jsx)(n.li,{children:"Release notes"}),"\n",(0,t.jsx)(n.li,{children:"Project documentation"}),"\n",(0,t.jsx)(n.li,{children:"GitHub contributors page"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Thank you for contributing to NetTraceX! \ud83d\ude80"})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>o});var i=s(6540);const t={},l=i.createContext(t);function r(e){const n=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);